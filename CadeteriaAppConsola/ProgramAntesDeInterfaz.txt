
    // Creo una instancia de Cadeteria
    Cadeteria cadeteria = new Cadeteria(1,"Mercado Libre","0800-888-9999");

    // Creo los clientes
    Cliente cliente1 = new Cliente(1,"Exequiel", "Dirección1", "123-456-7890");
    Cliente cliente2 = new Cliente(2,"Daiana", "Dirección2", "987-654-3210");

    // Agregar clientes a la Cadeteria ¿debería ser composicion o agregacion o depende del diseño del programador?
    cadeteria.AgregarCliente(cliente1);//aqui hay una relacion de agregacion porque cadeteria no crea los clientes
    cadeteria.AgregarCliente(cliente2);

    // Cre0 cadetes 
    Cadete cadete1 = new Cadete(1,"Exeiza","Correo Argentino", "555-555-5555");
    Cadete cadete2 = new Cadete(2,"Capital federal","Andreani", "444-444-4444");

    // Agregar cadetes a la Cadeteria
    cadeteria.Cadetes.Add(cadete1);
    cadeteria.Cadetes.Add(cadete2);

    // Creo pedidos
    Pedido pedido1 = new Pedido(1,"PC gamer", "Dirección1", cliente1);//¿acá de beria hacer client1.Direccion?
    Pedido pedido2 = new Pedido(2,"Coleccion Nietzche", "Dirección2", cliente2);

    // Agregar pedidos a la Cadeteria
    cadeteria.AgregarPedido(pedido1);
    cadeteria.AgregarPedido(pedido2);

    // Asignar pedidos a cadetes
    cadeteria.AsignarPedidoACadete(pedido1, cadete1);
    cadeteria.AsignarPedidoACadete(pedido2, cadete2);

    // Cambiar estado de un pedido
    pedido1.CambiarEstadoPedido(EstadoPedido.Entregado);

    // Generar informe de actividad
    cadeteria.GenerarInformeActividad();
    
    
    /*
    a) consideré hacer todas como agregacion porque no quisiera perder a clientes,cadetes ni pedidos en 
    caso de que eliminara la cadeteria. Además, puede ser que los cadetes trabajen para varias cadeterias,
    o que un cliente pertenezca a varias cadeterias.

    b)
    
    */