using CsvHelper;
using CsvHelper.Configuration;
using CsvHelper.TypeConversion;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;

Cadeteria cadeteria = new Cadeteria();//¿podria hacerla estatica? para que sea parte de la clase program y no parte de una instancia misma de la clase Cadeteria
// Cre0 cadetes 
Cadete cadete1 = new Cadete(1,"Exeiza","Correo Argentino", "555-555-5555");
Cadete cadete2 = new Cadete(2,"Capital federal","Andreani", "444-444-4444");

// Agregar cadetes a la Cadeteria
cadeteria.Cadetes.Add(cadete1);
cadeteria.Cadetes.Add(cadete2);

    bool exit = false;

    while (!exit)
    {
        Console.WriteLine("Sistema de Gestión de Pedidos");
        Console.WriteLine("1. Dar de alta un pedido");
        Console.WriteLine("2. Asignar un pedido a un cadete");
        Console.WriteLine("3. Cambiar estado de un pedido");
        Console.WriteLine("4. Reasignar un pedido a otro cadete");
        Console.WriteLine("5. Salir");
        Console.Write("Seleccione una opción: ");

        if (int.TryParse(Console.ReadLine(), out int choice))
        {
            switch (choice)
            {
                case 1:
                    DarDeAltaPedido();
                    break;
                case 2:
                    AsignarPedidoACadete();
                    break;
                case 3:
                    CambiarEstadoPedido();
                    break;
                case 4:
                    ReasignarPedido();
                    break;
                case 5:
                    exit = true;
                    break;
                default:
                    Console.WriteLine("Opción no válida. Intente nuevamente.");
                    break;
            }
        }
        else
        {
            Console.WriteLine("Entrada no válida. Intente nuevamente.");
        }

        Console.WriteLine();
    }

/**********FUNCIUONES****************/

//acá creo cliente y pedido
void DarDeAltaPedido()
    {   
        //pedida de datos del cliente
        Console.Write("Ingrese el id "); //¿deberia declarar este atributo como estatico e incrementarlo?
        int id = Convert.ToInt32(Console.ReadLine());
        Console.Write("Ingrese el nombre del cliente: ");
        string nombreCliente = Console.ReadLine();
        Console.Write("Ingrese la dirección de entrega: ");
        string direccionEntrega = Console.ReadLine();
        Console.Write("Ingrese su telefono: ");
        string numeroTel = Console.ReadLine();

        //datos del producto
        Console.Write("Ingrese el id del producto "); //¿deberia declarar este atributo como estatico e incrementarlo?
        int idProducto = Convert.ToInt32(Console.ReadLine());
        Console.Write("Ingrese el producto: ");
        string producto = Console.ReadLine();

        Cliente cliente = new Cliente(id,nombreCliente, direccionEntrega, numeroTel);
        Pedido pedido = new Pedido(idProducto,producto, direccionEntrega, cliente);

        cadeteria.AgregarCliente(cliente);
        cadeteria.AgregarPedido(pedido);

        Console.WriteLine("Pedido creado con éxito.");
    }

void AsignarPedidoACadete()
    {
        Console.Write("Ingrese el número de pedido a asignar: ");
        if (int.TryParse(Console.ReadLine(), out int pedidoId))
        {
            Console.Write("Ingrese el nombre del cadete: ");
            string nombreCadete = Console.ReadLine();
            Cadete cadete = cadeteria.Cadetes.FirstOrDefault(c => c.Nombre == nombreCadete);

            if (cadete != null)
            {
                Pedido pedido = cadeteria.Pedidos.FirstOrDefault(p => p.Id == pedidoId);
                if (pedido != null)
                {
                    cadeteria.AsignarPedidoACadete(pedido, cadete);
                    Console.WriteLine($"Pedido {pedidoId} asignado a {cadete.Nombre}.");
                }
                else
                {
                    Console.WriteLine($"Pedido {pedidoId} no encontrado.");
                }
            }
            else
            {
                Console.WriteLine($"Cadete {nombreCadete} no encontrado.");
            }
        }
        else
        {
            Console.WriteLine("Número de pedido no válido.");
        }
    }

void CambiarEstadoPedido()
    {
        Console.Write("Ingrese el número de pedido a cambiar de estado: ");
        if (int.TryParse(Console.ReadLine(), out int pedidoId))
        {
            Pedido pedido = cadeteria.Pedidos.FirstOrDefault(p => p.Id == pedidoId);
            if (pedido != null)
            {
                Console.WriteLine("Seleccione el nuevo estado del pedido:");
                Console.WriteLine("1. Pendiente");
                Console.WriteLine("2. Entregado");
                Console.Write("Elija una opción: ");

                if (int.TryParse(Console.ReadLine(), out int estadoChoice))
                {
                    if (estadoChoice == 1)
                    {
                        pedido.CambiarEstadoPedido(EstadoPedido.Pendiente);
                    }
                    else if (estadoChoice == 2)
                    {
                        pedido.CambiarEstadoPedido(EstadoPedido.Entregado);
                    }
                    else
                    {
                        Console.WriteLine("Opción no válida.");
                    }
                }
                else
                {
                    Console.WriteLine("Opción no válida.");
                }
            }
            else
            {
                Console.WriteLine($"Pedido {pedidoId} no encontrado.");
            }
        }
        else
        {
            Console.WriteLine("Número de pedido no válido.");
        }
    }

void ReasignarPedido()
    {
        Console.Write("Ingrese el número de pedido a reasignar: ");
        if (int.TryParse(Console.ReadLine(), out int pedidoId))
        {
            Pedido pedido = cadeteria.Pedidos.FirstOrDefault(p => p.Id == pedidoId);
            if (pedido != null)
            {
                Console.Write("Ingrese el nombre del nuevo cadete: ");
                string nombreCadete = Console.ReadLine();
                Cadete nuevoCadete = cadeteria.Cadetes.FirstOrDefault(c => c.Nombre == nombreCadete);

                if (nuevoCadete != null)
                {
                    cadeteria.AsignarPedidoACadete(pedido, nuevoCadete);
                    Console.WriteLine($"Pedido {pedidoId} reasignado a {nuevoCadete.Nombre}.");
                }
                else
                {
                    Console.WriteLine($"Cadete {nombreCadete} no encontrado.");
                }
            }
            else
            {
                Console.WriteLine($"Pedido {pedidoId} no encontrado.");
            }
        }
        else
        {
            Console.WriteLine("Número de pedido no válido.");
        }
    }
